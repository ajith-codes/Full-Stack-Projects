{"ast":null,"code":"var _jsxFileName = \"D:\\\\secretSanta_Ajith_Fullstack\\\\secretSanta_frontend\\\\secret-santa-frontend\\\\src\\\\components\\\\SantaAssignment.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { fetchSantaAssignments } from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst SantaAssignment = () => {\n  _s();\n  const [assignments, setAssignments] = useState([]);\n  useEffect(() => {\n    fetchSantaAssignments().then(data => setAssignments(data));\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secret Santa Assignments\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Employee Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Secret Child Name\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"Secret Child Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: assignments.map((assignment, index) => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.employee.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.employee.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.secretChild.name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: assignment.secretChild.email\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 15\n          }, this)]\n        }, index, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n};\n_s(SantaAssignment, \"xHzjYRK0bjAi2sosMNx5b/61Q3Y=\");\n_c = SantaAssignment;\nexport default SantaAssignment;\nvar _c;\n$RefreshReg$(_c, \"SantaAssignment\");","map":{"version":3,"names":["React","useState","useEffect","fetchSantaAssignments","jsxDEV","_jsxDEV","SantaAssignment","_s","assignments","setAssignments","then","data","children","fileName","_jsxFileName","lineNumber","columnNumber","map","assignment","index","employee","name","email","secretChild","_c","$RefreshReg$"],"sources":["D:/secretSanta_Ajith_Fullstack/secretSanta_frontend/secret-santa-frontend/src/components/SantaAssignment.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { fetchSantaAssignments } from '../services/api';\r\n\r\ninterface Employee {\r\n  employee: {\r\n    name: string;\r\n    email: string;\r\n  };\r\n  secretChild: {\r\n    name: string;\r\n    email: string;\r\n  };\r\n}\r\n\r\nconst SantaAssignment: React.FC = () => {\r\n  const [assignments, setAssignments] = useState<Employee[]>([]);\r\n\r\n  useEffect(() => {\r\n    fetchSantaAssignments().then(data => setAssignments(data));\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <h1>Secret Santa Assignments</h1>\r\n      <table>\r\n        <thead>\r\n          <tr>\r\n            <th>Employee Name</th>\r\n            <th>Employee Email</th>\r\n            <th>Secret Child Name</th>\r\n            <th>Secret Child Email</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {assignments.map((assignment, index) => (\r\n            <tr key={index}>\r\n              <td>{assignment.employee.name}</td>\r\n              <td>{assignment.employee.email}</td>\r\n              <td>{assignment.secretChild.name}</td>\r\n              <td>{assignment.secretChild.email}</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SantaAssignment;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,qBAAqB,QAAQ,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAaxD,MAAMC,eAAyB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtC,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGR,QAAQ,CAAa,EAAE,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdC,qBAAqB,CAAC,CAAC,CAACO,IAAI,CAACC,IAAI,IAAIF,cAAc,CAACE,IAAI,CAAC,CAAC;EAC5D,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,EAAI;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACjCX,OAAA;MAAAO,QAAA,gBACEP,OAAA;QAAAO,QAAA,eACEP,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAAO,QAAA,EAAI;UAAa;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACtBX,OAAA;YAAAO,QAAA,EAAI;UAAc;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eACvBX,OAAA;YAAAO,QAAA,EAAI;UAAiB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,eAC1BX,OAAA;YAAAO,QAAA,EAAI;UAAkB;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACzB;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACA,CAAC,eACRX,OAAA;QAAAO,QAAA,EACGJ,WAAW,CAACS,GAAG,CAAC,CAACC,UAAU,EAAEC,KAAK,kBACjCd,OAAA;UAAAO,QAAA,gBACEP,OAAA;YAAAO,QAAA,EAAKM,UAAU,CAACE,QAAQ,CAACC;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACnCX,OAAA;YAAAO,QAAA,EAAKM,UAAU,CAACE,QAAQ,CAACE;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACpCX,OAAA;YAAAO,QAAA,EAAKM,UAAU,CAACK,WAAW,CAACF;UAAI;YAAAR,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC,eACtCX,OAAA;YAAAO,QAAA,EAAKM,UAAU,CAACK,WAAW,CAACD;UAAK;YAAAT,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAK,CAAC;QAAA,GAJhCG,KAAK;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKV,CACL;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACG,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACT,EAAA,CAhCID,eAAyB;AAAAkB,EAAA,GAAzBlB,eAAyB;AAkC/B,eAAeA,eAAe;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}