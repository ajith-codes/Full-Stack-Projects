{"ast":null,"code":"var _jsxFileName = \"D:\\\\secretSanta_Ajith_Fullstack\\\\secretSanta_frontend\\\\secret-santa-frontend\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [file, setFile] = useState(null);\n  const [downloadLink, setDownloadLink] = useState(null);\n  const onFileChange = event => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n  const onFileUpload = () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n      axios.post('http://localhost:5000/api/upload', formData, {\n        responseType: 'blob'\n      }).then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        setDownloadLink(url);\n      }).catch(error => {\n        console.error('Error uploading file:', error);\n      });\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Secret Santa Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: onFileChange\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onFileUpload,\n      children: \"Upload\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), downloadLink && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: downloadLink,\n        download: \"secret_santa_assignments.xlsx\",\n        children: \"Download Assignments\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"4hZQNx9YBELguj3Pnp4BBkcSp7E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","App","_s","file","setFile","downloadLink","setDownloadLink","onFileChange","event","target","files","onFileUpload","formData","FormData","append","post","responseType","then","response","url","window","URL","createObjectURL","Blob","data","catch","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","onClick","href","download","_c","$RefreshReg$"],"sources":["D:/secretSanta_Ajith_Fullstack/secretSanta_frontend/secret-santa-frontend/src/App.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\n\nconst App: React.FC = () => {\n  const [file, setFile] = useState<File | null>(null);\n  const [downloadLink, setDownloadLink] = useState<string | null>(null);\n\n  const onFileChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    if (event.target.files && event.target.files[0]) {\n      setFile(event.target.files[0]);\n    }\n  };\n\n  const onFileUpload = () => {\n    if (file) {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      axios.post('http://localhost:5000/api/upload', formData, {\n        responseType: 'blob'\n      })\n      .then(response => {\n        const url = window.URL.createObjectURL(new Blob([response.data]));\n        setDownloadLink(url);\n      })\n      .catch(error => {\n        console.error('Error uploading file:', error);\n      });\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Secret Santa Upload</h1>\n      <input type=\"file\" onChange={onFileChange} />\n      <button onClick={onFileUpload}>Upload</button>\n      {downloadLink && (\n        <div>\n          <a href={downloadLink} download=\"secret_santa_assignments.xlsx\">Download Assignments</a>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,GAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC1B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGP,QAAQ,CAAc,IAAI,CAAC;EACnD,MAAM,CAACQ,YAAY,EAAEC,eAAe,CAAC,GAAGT,QAAQ,CAAgB,IAAI,CAAC;EAErE,MAAMU,YAAY,GAAIC,KAA0C,IAAK;IACnE,IAAIA,KAAK,CAACC,MAAM,CAACC,KAAK,IAAIF,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,EAAE;MAC/CN,OAAO,CAACI,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC,CAAC;IAChC;EACF,CAAC;EAED,MAAMC,YAAY,GAAGA,CAAA,KAAM;IACzB,IAAIR,IAAI,EAAE;MACR,MAAMS,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEX,IAAI,CAAC;MAE7BL,KAAK,CAACiB,IAAI,CAAC,kCAAkC,EAAEH,QAAQ,EAAE;QACvDI,YAAY,EAAE;MAChB,CAAC,CAAC,CACDC,IAAI,CAACC,QAAQ,IAAI;QAChB,MAAMC,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAAC,IAAIC,IAAI,CAAC,CAACL,QAAQ,CAACM,IAAI,CAAC,CAAC,CAAC;QACjElB,eAAe,CAACa,GAAG,CAAC;MACtB,CAAC,CAAC,CACDM,KAAK,CAACC,KAAK,IAAI;QACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC/C,CAAC,CAAC;IACJ;EACF,CAAC;EAED,oBACE1B,OAAA;IAAK4B,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAClB7B,OAAA;MAAA6B,QAAA,EAAI;IAAmB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAC5BjC,OAAA;MAAOkC,IAAI,EAAC,MAAM;MAACC,QAAQ,EAAE5B;IAAa;MAAAuB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAC7CjC,OAAA;MAAQoC,OAAO,EAAEzB,YAAa;MAAAkB,QAAA,EAAC;IAAM;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EAC7C5B,YAAY,iBACXL,OAAA;MAAA6B,QAAA,eACE7B,OAAA;QAAGqC,IAAI,EAAEhC,YAAa;QAACiC,QAAQ,EAAC,+BAA+B;QAAAT,QAAA,EAAC;MAAoB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrF,CACN;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAAA/B,EAAA,CAxCKD,GAAa;AAAAsC,EAAA,GAAbtC,GAAa;AA0CnB,eAAeA,GAAG;AAAC,IAAAsC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}